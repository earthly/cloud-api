syntax = "proto3";
package api.public.logstream;
option go_package = "./logstream";
import "manifest.proto";
import "delta.proto";

message StreamLogRequest {
  string build_id = 1;
  repeated Delta deltas = 2;
  bool eof = 3;
}

message StreamLogResponse {
  bool eof_ack = 1;
}

message GetFirebaseAuthTokenRequest {}

message GetFirebaseAuthTokenResponse {
  string token = 1;
}

service LogStream {
  // StreamLogs streams logs to the server. Stream protocol:
  // 1. The client opens the channel.
  // 2. The client sends a ResetFields delta.
  // 3. Client continues streaming through the rest of the deltas.
  // 4. The final stream message from the client is an eof=true message.
  // 5. Server responds with eof_ack=true.
  // 6. Client closes the channel.
  rpc StreamLogs(stream StreamLogRequest) returns (stream StreamLogResponse) {}

  // GetFirebaseAuthToken returns a token suitable for use with Firebase APIs
  // The user must already be authenticated.
  rpc GetFirebaseAuthToken(GetFirebaseAuthTokenRequest) returns (GetFirebaseAuthTokenResponse) {}
}
