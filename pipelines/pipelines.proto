syntax = "proto3";
package api.public.pipelines;
option go_package = "./pipelines";

import "google/api/annotations.proto";

service Pipelines {
  // ManualBuild manually triggers a Pipeline build with the
  // provided Targets, Args and Secrets. The new build_id is returned.
  rpc ManualBuild(ManualBuildRequest) returns (ManualBuildResponse) {
    option (google.api.http) = {
      post: "/api/v0/projects/{project_id}/pipelines/{pipeline_id}/builds"
      body: "*"
    };
  }
  // CreateBuildkit starts a new Hosted Buildkit instance using the latest AMI version.
  // The Buildkit instance can be used by users for their local Cloud or 3rd-party CI builds.
  rpc CreateBuildkit(CreateBuildkitRequest) returns (CreateBuildkitResponse) {
    option (google.api.http) = {
      post: "/api/v0/buildkits"
      body: "*"
    };
  }
  // ListBuildkits returns a list of Buildkit instances available in the organization.
  rpc ListBuildkits(ListBuildkitsRequest) returns (ListBuildkitsResponse) {
    option (google.api.http) = {
      get: "/api/v0/buildkits"
    };
  }
  // UpdateBuildkit updates a buildkit instance to the latest version.
  // (I.e. the latest AMI we have in AWS).
  // Calling this may result in some down-time on the instance while it updates.
  rpc UpdateBuildkit(UpdateBuildkitRequest) returns (UpdateBuildkitResponse) {
    option (google.api.http) = {
      post: "/api/v0/buildkits/{name}/update"
      body: "*"
    };
  }
  // DeleteBuildkit decommissions a Buildkit instance.
  rpc DeleteBuildkit(DeleteBuildkitRequest) returns (DeleteBuildkitResponse) {
    option (google.api.http) = {
      delete: "/api/v0/buildkits/{name}"
    };
  }
}

message ManualBuildRequest {
  string org_id = 1;
  string project_id = 2;
  string pipeline_id = 3;
  repeated Target targets = 4;
}

message ManualBuildResponse {
  string build_id = 1;
}

message Target {
  string reference = 1;
  repeated TargetArg args = 2;
  repeated TargetSecret secrets = 4;
}

message TargetArg {
  string name = 1;
  string value = 2;
}

message TargetSecret {
  string name = 1;
  string value = 2;
}

message CreateBuildkitRequest {
  string org_id = 1;
  string name = 2; // characters should be valid within a URL
  string platform = 3; // Supported values now are: linux/amd64, linux/arm64
  bytes tls_public_key = 5;
  bytes tls_private_key = 6;
}

enum BuildkitStatus {
  BUILDKIT_STATUS_UNSPECIFIED = 0;
  BUILDKIT_STATUS_CREATING = 1;
  BUILDKIT_STATUS_OPERATIONAL = 2;
  BUILDKIT_STATUS_OFFLINE = 3;
  BUILDKIT_STATUS_DESTROYING = 4;
}

message CreateBuildkitResponse {
  string public_ip = 1;
  BuildkitStatus status = 2;
  string version = 3;
}

message ListBuildkitsRequest {
  string org_id = 1;
}

message ListBuildkitsResponse {
  message BuildkitInstance {
    string user_id = 1;
    string name = 2;
    string platform = 3;
    BuildkitStatus status = 4;
    string public_ip = 5;
    string version = 6;
  }
  repeated BuildkitInstance instances = 1;
}

message UpdateBuildkitRequest {
  string org_id = 1;
  string name = 2;
}

message UpdateBuildkitResponse {}

message DeleteBuildkitRequest {
  string org_id = 1;
  string name = 2;
}

message DeleteBuildkitResponse{}
