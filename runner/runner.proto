syntax = "proto3";
package api.public.runner;
option go_package = "./runner";

service Runner {
  // Build starts a build on a satellite.
  rpc Build(BuildRequest) returns (BuildResponse) {}
  rpc Status(StatusRequest) returns (StatusResponse) {}
  rpc Cancel(CancelRequest) returns (CancelResponse) {}
}

message GitInfo {
  // https://docs.github.com/en/rest/checks/runs?apiVersion=2022-11-28
  string owner = 1;
  string repo = 2;
  string hash = 3;
  // head_branch represents the branch the build is running on (where changes are made)
  // Whereas, base_branch would be the branch changes are merged into (i.e., main)
  // Builds run on a SHA, but there we want to add the branch context for the appropriate trigger (push / pr)
  string head_branch = 15;
}

message BuildRequest {
  string url = 1;
  string path = 2;
  string tag = 3;
  string target = 4;
  string repo_token = 5;
  string build_id = 6;
  string pipeline_id = 7;
  string user_id = 8;
  string org_id = 9;
  string project_id = 10;
  string pipeline_name = 11;
  GitInfo git_info = 12;
  bool no_cache = 13;
  bool is_push = 14;
  string org_name = 15;
  string project_name = 16;
  string timeout = 17;
}

message BuildResponse {}

message CancelRequest {
  string build_id = 1;
}

message CancelResponse {
  bool cancelled = 1;
}

message StatusRequest {}

enum RunnerStatus {
  RUNNER_STATUS_UNKNOWN = 0;
  RUNNER_STATUS_WAITING = 1;
  RUNNER_STATUS_READY = 2;
  RUNNER_STATUS_ERROR = 3;
}
message StatusResponse {
  RunnerStatus status = 1;
  string status_reason = 2;
}
